CREATE DATABASE Master_Floor;

USE DATABASE Master_Floor;

-- #################################################################
-- # Шаг 0: Удаление таблиц в обратном порядке зависимостей
-- #################################################################
-- Это гарантирует, что мы удалим зависимые таблицы перед теми, на которые они ссылаются.

DROP TABLE IF EXISTS warehouse_materials;
DROP TABLE IF EXISTS material_purchases;
DROP TABLE IF EXISTS order_items;
DROP TABLE IF EXISTS production_orders;
DROP TABLE IF EXISTS warehouse_products;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS materials;
DROP TABLE IF EXISTS partner_sales_history;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS access_log;
DROP TABLE IF EXISTS partners;
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS employees;
DROP TABLE IF EXISTS partner_types;
DROP TABLE IF EXISTS product_types;
DROP TABLE IF EXISTS material_types;
DROP TABLE IF EXISTS suppliers;

-- #################################################################
-- # ГРУППА 1: Базовые таблицы без внешних зависимостей (Level 1)
-- #################################################################
-- Эти таблицы можно создавать в любом порядке, так как они не ссылаются ни на кого.

-- 1. Таблица ролей
CREATE TABLE roles (
    role_id INT PRIMARY KEY AUTO_INCREMENT,
    role_name VARCHAR(100) UNIQUE NOT NULL -- Роли: 'Partner', 'Warehouse_Manager', 'Production_Manager', 'HR_Manager', 'Admin', etc.
);

-- 2. Таблица сотрудников
CREATE TABLE employees (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(255) NOT NULL,
    post VARCHAR(255) NOT NULL -- Должность в компании (например, "Менеджер склада")
);

-- 3. Таблица типов партнеров
CREATE TABLE partner_types (
    type_id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(50) UNIQUE NOT NULL COMMENT 'Тип партнера (ЗАО, ООО, ПАО и т.д.)'
);

-- 4. Таблица типов продукции
CREATE TABLE product_types (
    type_id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(255) UNIQUE NOT NULL COMMENT 'Тип продукции (Ламинат, Паркетная доска и т.д.)',
    coefficient DECIMAL(10, 2) NOT NULL DEFAULT 1.0
);

-- 5. Таблица типов материалов
CREATE TABLE material_types (
    type_id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(255) UNIQUE NOT NULL COMMENT 'Тип материала',
    defect_rate DECIMAL(5, 4) NOT NULL DEFAULT 0.0 COMMENT 'Процент брака материала'
);

-- 6. Таблица поставщиков
CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY AUTO_INCREMENT,
    company_name VARCHAR(255) NOT NULL,
    inn VARCHAR(12) UNIQUE NOT NULL,
    contact_phone VARCHAR(20)
);


-- #################################################################
-- # ГРУППА 2: Таблицы с зависимостями только от Группы 1 (Level 2)
-- #################################################################

-- 7. Таблица партнеров (REFERENCES: partner_types)
CREATE TABLE partners (
    partner_id INT PRIMARY KEY AUTO_INCREMENT,
    company_name VARCHAR(255) NOT NULL,
    inn VARCHAR(12) UNIQUE NOT NULL,
    director_name VARCHAR(255) NOT NULL,
    contact_phone VARCHAR(20),
    email VARCHAR(255),
    current_rating INT DEFAULT 1,
    partner_type_id INT,
    FOREIGN KEY (partner_type_id) REFERENCES partner_types(type_id) ON DELETE RESTRICT
);

-- 8. Таблица продукции (REFERENCES: product_types)
CREATE TABLE products (
    product_id INT PRIMARY KEY AUTO_INCREMENT,
    product_name VARCHAR(255) NOT NULL,
    article_number VARCHAR(100) UNIQUE NOT NULL,
    min_partner_price DECIMAL(15,2) NOT NULL,
    cost_price DECIMAL(15,2) NOT NULL,
    production_time_hours INT NOT NULL,
    weight_net_kg DECIMAL(10,2),
    weight_gross_kg DECIMAL(10,2),
    product_type_id INT NOT NULL,
    FOREIGN KEY (product_type_id) REFERENCES product_types(type_id) ON DELETE RESTRICT
);


-- #################################################################
-- # ГРУППА 3: Таблицы с зависимостями от Групп 1 и 2 (Level 3)
-- #################################################################

-- 9. Таблица материалов (сырья)
-- REFERENCES: suppliers (G1), material_types (G1)
CREATE TABLE materials (
    material_id INT PRIMARY KEY AUTO_INCREMENT,
    material_name VARCHAR(255) NOT NULL,
    supplier_id INT NOT NULL,
    cost_per_unit DECIMAL(15,2) NOT NULL,
    unit_of_measure VARCHAR(50) NOT NULL,
    material_type_id INT NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id) ON DELETE CASCADE,
    FOREIGN KEY (material_type_id) REFERENCES material_types(type_id) ON DELETE RESTRICT
);

-- 10. Таблица пользователей (для аутентификации)
-- REFERENCES: roles (G1), employees (G1), partners (G2)
CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT UNIQUE, -- Связь с сотрудником
    partner_id INT UNIQUE, -- Связь с партнером (для доступа партнеров)
    username VARCHAR(100) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL, -- Хешированный пароль для безопасности
    role_id INT NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id) ON DELETE CASCADE,
    FOREIGN KEY (partner_id) REFERENCES partners(partner_id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES roles(role_id)
);

-- 11. История продаж партнеров (для расчета скидок)
-- REFERENCES: partners (G2)
CREATE TABLE partner_sales_history (
    sale_id INT PRIMARY KEY AUTO_INCREMENT,
    partner_id INT NOT NULL,
    sale_date DATE NOT NULL,
    total_amount DECIMAL(15,2) NOT NULL,
    products_sold_count INT NOT NULL,
    FOREIGN KEY (partner_id) REFERENCES partners(partner_id) ON DELETE CASCADE
);

-- 12. Таблица заявок от партнеров
-- REFERENCES: partners (G2), employees (G1)
CREATE TABLE orders (
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    partner_id INT NOT NULL,
    manager_id INT NOT NULL, -- Менеджер, который ведет заказ
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('created', 'waiting_payment', 'in_production', 'ready_for_shipment', 'completed', 'canceled') DEFAULT 'created',
    prepayment_amount DECIMAL(15,2) DEFAULT 0,
    total_paid_amount DECIMAL(15,2) DEFAULT 0, -- ОТЧЕТНОСТЬ: сколько реально оплачено
    total_amount DECIMAL(15,2) NOT NULL,
    FOREIGN KEY (partner_id) REFERENCES partners(partner_id) ON DELETE CASCADE,
    FOREIGN KEY (manager_id) REFERENCES employees(employee_id) ON DELETE CASCADE
);

-- 13. Журнал доступа сотрудников (Учет передвижения через турникеты)
-- REFERENCES: employees (G1)
CREATE TABLE access_log (
    log_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT NOT NULL,
    access_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    door_id INT NOT NULL,
    access_type ENUM('entry', 'exit') NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id) ON DELETE CASCADE
);


-- #################################################################
-- # ГРУППА 4: Таблицы с более глубокими зависимостями (Level 4)
-- #################################################################

-- 14. Склад материалов (остатки)
-- REFERENCES: materials (G3)
CREATE TABLE warehouse_materials (
    record_id INT PRIMARY KEY AUTO_INCREMENT,
    material_id INT NOT NULL,
    current_quantity INT NOT NULL DEFAULT 0,
    min_quantity INT NOT NULL DEFAULT 10,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (material_id) REFERENCES materials(material_id) ON DELETE CASCADE
);

-- 15. Таблица закупок сырья (для отчетности менеджера по закупкам)
-- REFERENCES: materials (G3), suppliers (G1), employees (G1)
CREATE TABLE material_purchases (
    purchase_id INT PRIMARY KEY AUTO_INCREMENT,
    material_id INT NOT NULL,
    supplier_id INT NOT NULL,
    purchase_date DATE NOT NULL,
    quantity_bought INT NOT NULL,
    total_cost DECIMAL(15,2) NOT NULL,
    purchase_manager_id INT, -- Менеджер, оформивший закупку
    FOREIGN KEY (material_id) REFERENCES materials(material_id) ON DELETE RESTRICT,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id) ON DELETE RESTRICT,
    FOREIGN KEY (purchase_manager_id) REFERENCES employees(employee_id) ON DELETE SET NULL
);

-- 16. Позиции заявки (что заказано)
-- REFERENCES: orders (G3), products (G2)
CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL CHECK (quantity > 0),
    agreed_price DECIMAL(15,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

-- 17. Производственные задания (Планирование производства)
-- REFERENCES: orders (G3)
CREATE TABLE production_orders (
    production_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE,
    status ENUM('planned', 'in_progress', 'completed', 'on_hold') DEFAULT 'planned',
    workshop_number INT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE
);

-- 18. Склад готовой продукции
-- REFERENCES: products (G2)
CREATE TABLE warehouse_products (
    record_id INT PRIMARY KEY AUTO_INCREMENT,
    product_id INT NOT NULL,
    current_quantity INT NOT NULL DEFAULT 0,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);
