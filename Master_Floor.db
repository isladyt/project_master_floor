CREATE DATABASE Master_Floor;

-- Включаем базу данных
USE Master_Floor;

-- 1. Таблица поставщиков
CREATE TABLE suppliers (
    supplier_id INT PRIMARY KEY AUTO_INCREMENT,
    company_name VARCHAR(255) NOT NULL,
    inn VARCHAR(12) UNIQUE NOT NULL,
    contact_phone VARCHAR(20)
);

-- 2. Таблица материалов (сырья)
CREATE TABLE materials (
    material_id INT PRIMARY KEY AUTO_INCREMENT,
    material_name VARCHAR(255) NOT NULL,
    supplier_id INT NOT NULL,
    cost_per_unit DECIMAL(15,2) NOT NULL,
    unit_of_measure VARCHAR(50) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id) ON DELETE CASCADE
);

-- 3. Склад материалов (остатки)
CREATE TABLE warehouse_materials (
    record_id INT PRIMARY KEY AUTO_INCREMENT,
    material_id INT NOT NULL,
    current_quantity INT NOT NULL DEFAULT 0,
    min_quantity INT NOT NULL DEFAULT 10,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (material_id) REFERENCES materials(material_id) ON DELETE CASCADE
);

-- 4. Таблица продукции
CREATE TABLE products (
    product_id INT PRIMARY KEY AUTO_INCREMENT,
    product_name VARCHAR(255) NOT NULL,
    article_number VARCHAR(100) UNIQUE NOT NULL,
    min_partner_price DECIMAL(15,2) NOT NULL,
    cost_price DECIMAL(15,2) NOT NULL,
    production_time_hours INT NOT NULL,
    weight_net_kg DECIMAL(10,2),
    weight_gross_kg DECIMAL(10,2)
);

-- 5. Таблица партнеров
CREATE TABLE partners (
    partner_id INT PRIMARY KEY AUTO_INCREMENT,
    company_name VARCHAR(255) NOT NULL,
    inn VARCHAR(12) UNIQUE NOT NULL,
    director_name VARCHAR(255) NOT NULL,
    contact_phone VARCHAR(20),
    email VARCHAR(255),
    current_rating INT DEFAULT 1
);

-- 6. История продаж партнеров (для расчета скидок)
CREATE TABLE partner_sales_history (
    sale_id INT PRIMARY KEY AUTO_INCREMENT,
    partner_id INT NOT NULL,
    sale_date DATE NOT NULL,
    total_amount DECIMAL(15,2) NOT NULL,
    products_sold_count INT NOT NULL,
    FOREIGN KEY (partner_id) REFERENCES partners(partner_id) ON DELETE CASCADE
);

-- 7. Таблица сотрудников
CREATE TABLE employees (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(255) NOT NULL,
    passport_data VARCHAR(255) NOT NULL,
    birth_date DATE NOT NULL,
    bank_account_number VARCHAR(100)
);

-- 8. Таблица заявок от партнеров
CREATE TABLE orders (
    order_id INT PRIMARY KEY AUTO_INCREMENT,
    partner_id INT NOT NULL,
    manager_id INT NOT NULL,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    status ENUM('created', 'waiting_payment', 'in_production', 'ready_for_shipment', 'completed', 'canceled') DEFAULT 'created',
    prepayment_amount DECIMAL(15,2) DEFAULT 0,
    total_amount DECIMAL(15,2) NOT NULL,
    FOREIGN KEY (partner_id) REFERENCES partners(partner_id) ON DELETE CASCADE,
    FOREIGN KEY (manager_id) REFERENCES employees(employee_id) ON DELETE CASCADE
);

-- 9. Позиции заявки (что заказано)
CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL CHECK (quantity > 0),
    agreed_price DECIMAL(15,2) NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

-- 10. Склад готовой продукции
CREATE TABLE warehouse_products (
    record_id INT PRIMARY KEY AUTO_INCREMENT,
    product_id INT NOT NULL,
    current_quantity INT NOT NULL DEFAULT 0,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE
);

-- 11. Производственные задания
CREATE TABLE production_orders (
    production_id INT PRIMARY KEY AUTO_INCREMENT,
    order_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE,
    status ENUM('planned', 'in_progress', 'completed', 'on_hold') DEFAULT 'planned',
    workshop_number INT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE
);

-- 12. Журнал доступа сотрудников
CREATE TABLE access_log (
    log_id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT NOT NULL,
    access_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    door_id INT NOT NULL,
    access_type ENUM('entry', 'exit') NOT NULL,
    FOREIGN KEY (employee_id) REFERENCES employees(employee_id) ON DELETE CASCADE
);

-- 1. Заполняем таблицу партнеров (partners)
INSERT INTO partners (company_name, inn, director_name, contact_phone, email, current_rating) VALUES
('База Строитель', '2222455179', 'Иванова Александра Ивановна', '493 123 45 67', 'aleksandraivanova@ml.ru', 7),
('Паркет 29', '3333888520', 'Петров Василий Петрович', '987 123 56 78', 'vppetrov@vl.ru', 7),
('Стройсервис', '4440391035', 'Соловьев Андрей Николаевич', '812 223 32 00', 'ansolovev@st.ru', 7),
('Ремонт и отделка', '1111520857', 'Воробьева Екатерина Валерьевна', '444 222 33 11', 'ekaterina.vorobeva@ml.ru', 5),
('МонтажПро', '5552431140', 'Степанов Степан Сергеевич', '912 888 33 33', 'stepanov@stepan.ru', 10);

-- 2. Заполняем таблицу продукции (products)
INSERT INTO products (product_name, article_number, min_partner_price, cost_price, production_time_hours, weight_net_kg, weight_gross_kg) VALUES
('Паркетная доска Ясень темный однополосная 14 мм', '8758385', 4456.90, 3000.00, 24, 15.5, 17.2),
('Инженерная доска Дуб Французская елка однополосная 12 мм', '8858958', 7330.99, 5000.00, 36, 18.2, 20.1),
('Ламинат Дуб дымчато-белый 33 класс 12 мм', '7750282', 1799.33, 1200.00, 18, 8.5, 9.8),
('Ламинат Дуб серый 32 класс 8 мм с фаской', '7028748', 3890.41, 2600.00, 20, 7.2, 8.1),
('Пробковое напольное клеевое покрытие 32 класс 4 мм', '5012543', 5450.59, 3800.00, 16, 6.8, 7.5);

-- 3. Заполняем таблицу сотрудников (employees)
INSERT INTO employees (full_name, passport_data, birth_date, bank_account_number) VALUES
('Смирнов Алексей Владимирович', '4510 123456', '1985-03-15', '40817810099910004312'),
('Козлова Ольга Игоревна', '4510 234567', '1990-07-22', '40817810099910005324'),
('Петров Дмитрий Сергеевич', '4510 345678', '1988-11-30', '40817810099910006458'),
('Васильева Марина Александровна', '4510 456789', '1992-05-18', '40817810099910007591'),
('Николаев Иван Петрович', '4510 567890', '1983-09-08', '40817810099910008673');

-- 4. Заполняем таблицу заказов (orders)
INSERT INTO orders (partner_id, manager_id, order_date, status, prepayment_amount, total_amount) VALUES
(1, 1, '2023-03-23 00:00:00', 'completed', 4456.90, 69131950.00),
(1, 2, '2023-12-18 00:00:00', 'completed', 1799.33, 22221755.50),
(1, 3, '2024-06-07 00:00:00', 'in_production', 3890.41, 145501340.00),
(2, 4, '2022-12-02 00:00:00', 'completed', 7330.99, 256584650.00),
(2, 5, '2023-05-17 00:00:00', 'completed', 5450.59, 6813237.50),
(2, 1, '2024-06-07 00:00:00', 'waiting_payment', 1799.33, 1799330.00),
(2, 2, '2024-07-01 00:00:00', 'created', 4456.90, 33649595.00),
(3, 3, '2023-01-22 00:00:00', 'completed', 4456.90, 32287525.00),
(3, 4, '2024-07-05 00:00:00', 'created', 7330.99, 18327475.00),
(4, 5, '2023-03-20 00:00:00', 'completed', 3890.41, 229726705.00),
(4, 1, '2024-03-12 00:00:00', 'ready_for_shipment', 1799.33, 66935076.00),
(4, 2, '2024-05-14 00:00:00', 'in_production', 5450.59, 24527655.00),
(5, 3, '2023-09-19 00:00:00', 'completed', 1799.33, 89966500.00),
(5, 4, '2023-11-10 00:00:00', 'completed', 3890.41, 2606574700.00),
(5, 5, '2024-04-15 00:00:00', 'completed', 4456.90, 155991500.00),
(5, 1, '2024-06-12 00:00:00', 'completed', 7330.99, 183274750.00);

-- 5. Заполняем таблицу позиций заказов (order_items)
INSERT INTO order_items (order_id, product_id, quantity, agreed_price) VALUES
(1, 1, 15500, 4456.90),
(2, 3, 12350, 1799.33),
(3, 4, 37400, 3890.41),
(4, 2, 35000, 7330.99),
(5, 5, 1250, 5450.59),
(6, 3, 1000, 1799.33),
(7, 1, 7550, 4456.90),
(8, 1, 7250, 4456.90),
(9, 2, 2500, 7330.99),
(10, 4, 59050, 3890.41),
(11, 3, 37200, 1799.33),
(12, 5, 4500, 5450.59),
(13, 3, 50000, 1799.33),
(14, 4, 670000, 3890.41),
(15, 1, 35000, 4456.90),
(16, 2, 25000, 7330.99);

-- 6. Заполняем таблицу истории продаж партнеров (partner_sales_history)
INSERT INTO partner_sales_history (partner_id, sale_date, total_amount, products_sold_count) VALUES
(1, '2023-03-23', 69131950.00, 15500),
(1, '2023-12-18', 22221755.50, 12350),
(1, '2024-06-07', 145501340.00, 37400),
(2, '2022-12-02', 256584650.00, 35000),
(2, '2023-05-17', 6813237.50, 1250),
(2, '2024-06-07', 1799330.00, 1000),
(2, '2024-07-01', 33649595.00, 7550),
(3, '2023-01-22', 32287525.00, 7250),
(3, '2024-07-05', 18327475.00, 2500),
(4, '2023-03-20', 229726705.00, 59050),
(4, '2024-03-12', 66935076.00, 37200),
(4, '2024-05-14', 24527655.00, 4500),
(5, '2023-09-19', 89966500.00, 50000),
(5, '2023-11-10', 2606574700.00, 670000),
(5, '2024-04-15', 155991500.00, 35000),
(5, '2024-06-12', 183274750.00, 25000);

-- 7. Заполняем таблицу поставщиков (suppliers)
INSERT INTO suppliers (company_name, inn, contact_phone) VALUES
('Поставщик древесины "ЛесПром"', '1234567890', '495 111 22 33'),
('Металлобаза "СтальСервис"', '2345678901', '495 222 33 44'),
('Химические компоненты "ХимРеактив"', '3456789012', '495 333 44 55'),
('Фурнитура и комплектующие "КомплектМаркет"', '4567890123', '495 444 55 66'),
('Упаковочные материалы "УпаковкаПлюс"', '5678901234', '495 555 66 77');

-- 8. Заполняем таблицу материалов (materials)
INSERT INTO materials (material_name, supplier_id, cost_per_unit, unit_of_measure) VALUES
('Дубовая доска', 1, 1500.00, 'м³'),
('Ясеневая доска', 1, 1200.00, 'м³'),
('Пробковый материал', 1, 800.00, 'м²'),
('HDF плита', 2, 450.00, 'м²'),
('Меламиновая пленка', 3, 120.00, 'м²'),
('Лак полиуретановый', 3, 350.00, 'л'),
('Клей для пробки', 3, 280.00, 'кг'),
('Упаковочная пленка', 5, 85.00, 'м²'),
('Картонная коробка', 5, 45.00, 'шт');

-- 9. Заполняем таблицу склада материалов (warehouse_materials)
INSERT INTO warehouse_materials (material_id, current_quantity, min_quantity, last_updated) VALUES
(1, 150, 50, '2024-07-20 10:00:00'),
(2, 80, 30, '2024-07-20 10:00:00'),
(3, 200, 100, '2024-07-20 10:00:00'),
(4, 500, 200, '2024-07-20 10:00:00'),
(5, 300, 150, '2024-07-20 10:00:00'),
(6, 100, 40, '2024-07-20 10:00:00'),
(7, 80, 30, '2024-07-20 10:00:00'),
(8, 400, 200, '2024-07-20 10:00:00'),
(9, 1000, 500, '2024-07-20 10:00:00');

-- 10. Заполняем таблицу склада готовой продукции (warehouse_products)
INSERT INTO warehouse_products (product_id, current_quantity, last_updated) VALUES
(1, 500, '2024-07-20 10:00:00'),
(2, 300, '2024-07-20 10:00:00'),
(3, 1500, '2024-07-20 10:00:00'),
(4, 800, '2024-07-20 10:00:00'),
(5, 200, '2024-07-20 10:00:00');

-- 11. Заполняем таблицу производственных заданий (production_orders)
INSERT INTO production_orders (order_id, start_date, end_date, status, workshop_number) VALUES
(3, '2024-06-10', NULL, 'in_progress', 1),
(7, '2024-07-02', NULL, 'planned', 2),
(9, '2024-07-06', NULL, 'planned', 3),
(11, '2024-03-13', '2024-07-18', 'completed', 1),
(12, '2024-05-16', NULL, 'in_progress', 2);

-- 12. Заполняем таблицу журнала доступа (access_log)
INSERT INTO access_log (employee_id, access_time, door_id, access_type) VALUES
(1, '2024-07-20 08:05:00', 1, 'entry'),
(2, '2024-07-20 08:07:00', 1, 'entry'),
(3, '2024-07-20 08:10:00', 2, 'entry'),
(4, '2024-07-20 08:12:00', 1, 'entry'),
(5, '2024-07-20 08:15:00', 3, 'entry'),
(1, '2024-07-20 12:30:00', 1, 'exit'),
(2, '2024-07-20 12:35:00', 1, 'exit'),
(1, '2024-07-20 13:15:00', 1, 'entry'),
(2, '2024-07-20 13:20:00', 1, 'entry');
